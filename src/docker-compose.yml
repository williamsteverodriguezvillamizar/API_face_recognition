version: "3.7"

x-app-common:
  &app-common
  build:
    context: .
    dockerfile: Dockerfile
  env_file:
    - app/.envs/app.env
  volumes:
    - ./app:/app
  networks:
    - face_recognition_network

services:
  sidecar:
    <<: *app-common
    volumes:
      - ./app:/app
      # Extend homes to preserve bash and python history (DX)
      - app-roothome:/root

  celery-tasks:
    <<: *app-common
    depends_on:
      - redis
      - rabbitmq
    command: celery -A tasks worker --loglevel=info --pool=solo

  web:
    <<: *app-common
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - app/.envs/.postgres
      - app/.envs/app.env
    ports:
      - "8000:8000"
    depends_on:
      - postgres

  postgres:
    image: postgres:13.2
    ports:
      - "5432:5432"
    env_file:
      - app/.envs/.postgres
      - app/.envs/app.env
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - face_recognition_network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - face_recognition_network

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=root
      - HTTP_PASSWORD=qwerty
    ports:
      - "8081:8081"
    depends_on:
      - redis

  rabbitmq:
    image: rabbitmq:latest
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
    hostname: rabbitmq
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - face_recognition_network



networks:
  face_recognition_network:
    driver: bridge

volumes:
  redis-data:
  postgres:
  app-apphome:
  app-roothome:
  rabbitmq-data:
